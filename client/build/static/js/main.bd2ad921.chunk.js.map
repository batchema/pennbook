{"version":3,"sources":["components/MainNavBar.js","contexts/auth.js","constants/ports.js","components/Login.js","constants/newsConstants.js","utils/utils.js","components/Signup.js","components/HomeNavBar.js","components/Comment.js","components/Post.js","components/Profile.js","components/Messages.js","components/NewsArticle.js","components/Home.js","components/NewsFeed.js","components/Visualizer.js","routes/AuthRoute.js","App.js","reportWebVitals.js","index.js"],"names":["MainNavBar","style","width","height","mode","Item","className","disabled","float","marginRight","to","type","AuthContext","createContext","useAuth","useContext","API_ENDPOINT","Login","setAuth","useState","username","password","input","setInput","onInputChange","name","e","target","value","history","useHistory","marginTop","span","layout","label","rules","required","prefix","UserOutlined","onChange","Password","LockOutlined","onClick","message","error","fetch","method","credentials","headers","body","JSON","stringify","then","response","text","data","parse","login","accessToken","push","htmlType","interests","compareMembers","memberA","memberB","titleCase","word","replace","w","charAt","toUpperCase","substr","toLowerCase","epochToDate","epoch","d","Date","setUTCMilliseconds","h","getHours","m","getMinutes","hours","mins","amPm","getMonth","getDate","getFullYear","formatDate","dateString","arr","split","parseInt","formatDatePlus","membersToTitle","members","fullname","user","i","indexOf","splice","map","mem","join","reorderChats","chats","_id","isCurrent","index","unreadChat","length","c","last_modified","getTime","last_read","concat","Option","Select","Signup","firstname","lastname","email","dob","affiliation","_d","toLocaleString","display","padding","ContactsOutlined","MailOutlined","placeholder","format","HomeOutlined","showSearch","allowClear","interest","test","success","AutoComplete","withRouter","searchSuggestions","setSearchSuggestions","searchVal","setSearchVal","filterOption","onSearch","search","localStorage","getItem","console","log","suggs","onSelect","onDeselect","removeIcon","marginBottom","maxTagCount","sugg","CommentOutlined","DeploymentUnitOutlined","MenuOutlined","Comment","props","liked","setLiked","info","number_of_likes","numLikes","setNumLikes","useEffect","post","post_id","timestamp","ok","isLiked","commenter_full_name","content","position","right","fontSize","color","border","lineHeight","marginLeft","icon","LikeTwoTone","LikeOutlined","url","postID","postTimestamp","commentTimestamp","Post","num_likes","comment","setComment","comments","setComments","commentsVisible","setCommentsVisible","Items","status","href","poster","poster_full_name","CaretRightOutlined","postee","postee_full_name","MessageTwoTone","MessageOutlined","borderBottom","newComment","commenter_username","currentUser","TextArea","Input","socket","socketClient","Profile","useParams","location","useLocation","setCurrentUser","affiliationVisible","setAffiliationVisible","emailVisible","setEmailVisible","interestsVisible","setInterestsVisible","passwordVisible","setPasswordVisible","newAffiliation","newEmail","oldPassword","newPassword","newInterests","postContent","setPostContent","oldInterests","setOldInterests","friendStatus","setFriendStatus","posts","setPosts","friends","setFriends","accountDetails","setAccountDetails","on","emit","sender","accountUrl","postsUrl","homePosts","friendsUrl","allFriends","friendship","title","visible","onOk","a","onCancel","defaultValue","offsetTop","margin","size","tag","UserAddOutlined","usernameB","userB_full_name","backgroundColor","SendOutlined","UserDeleteOutlined","danger","EditOutlined","textAlign","friend","friendB","friendB_full_name","showCount","maxLength","newPosts","num_comments","postBody","image","description","Messages","chatid","incomingMessage","setIncomingMessage","messageContent","setMessageContent","currentChat","setCurrentChat","setChats","messages","setMessages","currentFriends","setCurrentFriends","addVisible","setAddVisible","userToAdd","setUserToAdd","addOptions","setAddOptions","removeVisible","setRemoveVisible","userToRemove","setUserToRemove","showInfo","setShowInfo","newChatVisible","setNewChatVisible","newGroupChatVisible","setNewGroupChatVisible","newChatOptions","setNewChatOptions","newChatUser","setNewChatUser","newGroupChatMembers","setNewGroupChatMembers","oldMessages","reorderedChats1","reorderedChats2","readChats","readChat","chat","selectChat","selectedChat","currentTarget","undefined","opt","o","member","overflowY","overflow","borderRight","borderRadius","opts","friendStrings","chatStrings","is_group","friendSet","Set","chatSet","difference","filter","x","has","diffArray","Array","from","sort","getNewChatOptions","FormOutlined","UsergroupAddOutlined","fontWeight","id","InfoCircleTwoTone","InfoCircleOutlined","sender_full_name","left","borderLeft","memberSet","friendsNotInChat","NewsArticle","correct_article_id","article_id","S","likes","headline","fontStyle","authors","short_description","rel","link","date","category","Home","friendRequests","setFriendRequests","newFriends","setNewFriends","onlineFriends","setOnlineFriends","recs","setRecs","newFriendships","allRequests","twoArticles","r","cleanArticles","acceptFriend","rejectFriend","newChat","f","rec","onlineFriend","CheckCircleTwoTone","twoToneColor","CloseCircleTwoTone","Search","NewsFeed","loading","setLoading","articles","setArticles","page","setPage","searchTerms","setSearchTerms","enterButton","trim","queries","LoadingOutlined","article","LeftOutlined","RightOutlined","Visualizer","setAffiliation","nodes","edges","graph","setGraph","friendNodes","friendEdges","font","borderWidth","shape","forEach","events","select","event","allNodes","allEdges","clickedNode","clickedUser","users","some","nodeToAdd","edgeToAdd","options","hierarchical","uuid","AuthRoute","Component","component","rest","auth","render","App","tokens","Provider","setItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd2ad921.chunk.js","sourcesContent":["\nimport { Button, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport '../styles/MainNavBar.css';\n\nconst MainNavBar = () => {\n\n    return (\n        <Menu style={{width: '100%', height: '50px'}} mode=\"horizontal\">\n            <Menu.Item className=\"no-pointer\" disabled>\n                <h1>\n                    PennBook\n                </h1>\n            </Menu.Item>\n            <Menu.Item className=\"no-pointer\" style={{float: 'right'}}>\n                <Button\n                    style={{ marginRight: \"8px\"}}\n                >\n                    <Link to='/signup'>Sign Up</Link>\n                </Button>\n                <Button\n                    type=\"primary\"\n                >\n                    <Link to='/'>Login</Link>\n                </Button>\n            </Menu.Item>\n        </Menu>\n    );\n}\n\nexport default MainNavBar;\n","import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}","var API_ENDPOINT = '54.89.147.27:80';\n\nexport { API_ENDPOINT };","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Card, Form, Input, Button, message } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\nimport MainNavBar from \"./MainNavBar.js\";\n\nimport { useAuth } from \"../contexts/auth\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nimport '../styles/Login.css';\n\nconst Login = () => {\n\n    const { setAuth } = useAuth();\n\n    const [input, setInput] = useState({\n        username: \"\",\n        password: \"\"\n    });\n\n    const onInputChange = (name, e) => {\n        input[name] = e.target.value;\n        setInput(input);\n    };\n\n    const history = useHistory();\n\n    const onSubmit = () => {\n\n        if (input[\"username\"] === \"\" || input[\"password\"] === \"\") {\n            message.error(\"Please fill in all fields.\");\n        } else {\n\n            fetch(`http://${API_ENDPOINT}/checklogin`, {\n                method: 'POST',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'content-type': 'application/json',\n                }, \n                body: JSON.stringify({\n                    username: input[\"username\"],\n                    password: input[\"password\"]\n                })\n            })\n            .then((response) => response.text())\n            .then((data) => {\n                var response = JSON.parse(data);\n                if (response.login) {\n                    setAuth(response.accessToken);\n                    history.push(`/home`);\n                } else {\n                    message.error(\"Invalid username and password.\");\n                }\n            });\n        }\n\n    };\n\n    return (\n        <div className=\"background\">\n            <Row>\n                <MainNavBar/>\n            </Row>\n            <Row style={{marginTop: \"50px\"}}>  \n                <Col span={14}>\n\n\n                </Col>\n                <Col span={10}>\n                    <Card className=\"form-card\">\n                        <Form layout=\"vertical\">\n                            <Form.Item\n                                label={<b>Username</b>}\n                                rules={[{ required: true }]}\n                            >\n                                <Input prefix={<UserOutlined />} onChange={(e) => {onInputChange(\"username\", e)}} name=\"username\" />\n                            </Form.Item>\n                            <Form.Item\n                                label={<b>Password</b>}\n                                rules={[{ required: true }]}\n                            >\n                                <Input.Password prefix={<LockOutlined />} onChange={(e) => {onInputChange(\"password\", e)}} name=\"password\" />\n                            </Form.Item>\n                            <Form.Item>\n                                <Button onClick={onSubmit} type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Login;\n","const interests = [\n    \"POLITICS\",\n    \"WELLNESS\",\n    \"ENTERTAINMENT\",\n    \"TRAVEL\",\n    \"STYLE & BEAUTY\",\n    \"PARENTING\",\n    \"HEALTHY LIVING\",\n    \"QUEER VOICES\",\n    \"FOOD & DRINK\",\n    \"BUSINESS\",\n    \"COMEDY\",\n    \"SPORTS\",\n    \"BLACK VOICES\",\n    \"HOME & LIVING\",\n    \"PARENTS\",\n    \"THE WORLDPOST\",\n    \"WEDDINGS\",\n    \"WOMEN\",\n    \"IMPACT\",\n    \"DIVORCE\",\n    \"CRIME\",\n    \"MEDIA\",\n    \"WEIRD NEWS\",\n    \"GREEN\",\n    \"WORLDPOST\",\n    \"RELIGION\",\n    \"STYLE\",\n    \"SCIENCE\",\n    \"WORLD NEWS\",\n    \"TASTE\",\n    \"TECH\",\n    \"MONEY\",\n    \"ARTS\",\n    \"FIFTY\",\n    \"GOOD NEWS\",\n    \"ARTS & CULTURE\",\n    \"ENVIRONMENT\",\n    \"COLLEGE\",\n    \"LATINO VOICES\",\n    \"CULTURE & ARTS\",\n    \"EDUCATION\"\n];\n\nexport { interests };","const compareMembers = (memberA, memberB) => {\n    if (memberA[\"username\"] < memberB[\"username\"]) {\n       return -1;\n    } else if (memberA[\"username\"] > memberB[\"username\"]) {\n       return 1;\n    } else {\n       return 0;\n    }\n };\n\nconst titleCase = (word) => {\n\n    return word.replace(/\\w\\S*/g, function(w) {\n        return w.charAt(0).toUpperCase() + w.substr(1).toLowerCase();\n    });\n\n};\n\nconst epochToDate = (epoch) => {\n\n    var d = new Date(0);\n    d.setUTCMilliseconds(epoch);\n\n    var h = d.getHours();\n    var m = d.getMinutes();\n\n    var hours = h > 12 ? h % 12 : \n                h === 0 ? 12 :\n                h;\n\n    var mins = (m < 10) ? \"0\" + m : m;\n    var amPm = (h >= 12 && h < 24) ? \"pm\" : \"am\";\n    \n\n    var s = (d.getMonth() + 1) + \"/\" + d.getDate() + \"/\" + d.getFullYear() + \" \" + hours + \":\" + mins + amPm;\n\n    return s;\n};\n\nconst formatDate = (dateString) => {\n\n    var arr = dateString.split('-');\n    var d = new Date(parseInt(arr[0]), parseInt(arr[1]) - 1, parseInt(arr[2]));\n\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    var s = monthNames[d.getMonth()] + \" \" + d.getDate() + \", \" + d.getFullYear();\n\n    return s; \n};\n\nconst formatDatePlus = (dateString) => {\n\n    var arr = dateString.split('-');\n    var d = new Date(parseInt(arr[0]), parseInt(arr[1]) - 1, parseInt(arr[2]));\n\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    var s = monthNames[d.getMonth()] + \" \" + d.getDate() + \", \" + (d.getFullYear() + 4);\n\n    return s; \n};\n\nconst membersToTitle = (members, username, fullname) => {\n\n    var user = {\n        \"username\": username,\n        \"fullname\": fullname\n    };\n\n    const m = [...members];\n    const i = m.indexOf(JSON.stringify(user));\n    m.splice(i, 1);\n\n    var title = m.map((mem) => {\n\n        var parseMem = JSON.parse(mem);\n        return parseMem.fullname;\n\n    });\n\n    const titleName = title.join(', ');\n\n    return titleName;\n\n};\n\nconst friendsNotInChat = (friends, members) => {\n\n    var friendStrings = friends.map((friend) => {\n        return JSON.stringify({\n            \"username\": friend.friendB,\n            \"fullname\": friend.friendB_full_name\n        });\n    });\n\n    var friendSet = new Set(friendStrings);\n    var memberSet = new Set(members);\n    \n    var difference = new Set([...friendSet].filter(x => !memberSet.has(x)));\n    var diffArray = Array.from(difference);\n    diffArray.sort(compareMembers);\n\n    return diffArray;\n\n};\n\nconst getNewChatOptions = (friends, chats, username, fullname) => {\n\n    var user = {\n        \"username\": username,\n        \"fullname\": fullname\n    };\n\n    var friendStrings = friends.map((friend) => {\n        return JSON.stringify({\n            \"username\": friend.friendB,\n            \"fullname\": friend.friendB_full_name\n        });\n    });\n\n    var chatStrings = chats.map((chat) => {\n        if (!chat.is_group) {\n\n            const m = [...chat.members];\n            const i = m.indexOf(JSON.stringify(user));\n            m.splice(i, 1);\n\n            return m[0];\n        }\n    });\n\n    var friendSet = new Set(friendStrings);\n    var chatSet = new Set(chatStrings);\n    \n    var difference = new Set([...friendSet].filter(x => !chatSet.has(x)));\n    var diffArray = Array.from(difference);\n    diffArray.sort(compareMembers);\n\n    return diffArray;\n\n};\n\nvar reorderChats = (chats, _id, isCurrent) => {\n\n    var index = -1;\n    var unreadChat = null;\n\n    for (var i = 0; i < chats.length; i++) {\n        if (chats[i]._id === _id) {\n            index = i;\n            unreadChat = chats[i];\n            break;\n        }\n    }\n\n    var c = [...chats];\n\n    if (index !== -1) {\n        c.splice(index, 1);\n        unreadChat.last_modified = new Date().getTime();\n\n        if (isCurrent) {\n            unreadChat.last_read = new Date().getTime();\n        }\n\n        var c1 = [unreadChat].concat(c);\n        \n        return c1;\n    }\n    \n    return c;\n\n};\n\nvar readChat = (chats, _id) => {\n\n    var c = [...chats];\n\n    for (var i = 0; i < c.length; i++) {\n        if (c[i]._id === _id) {\n            c[i].last_read = new Date().getTime();\n            break;\n        }\n    }\n\n    return c;\n\n};\n\nvar cleanArticles = (recs) => {\n\n    const today = \"2016-12-16\";\n\n    var filtered = recs.filter((r) => {\n        return (r.date.S < today);\n    });\n\n    return filtered.splice(0, 2);\n\n\n};\n\n\nexport { titleCase, epochToDate, formatDatePlus, formatDate, membersToTitle, friendsNotInChat, getNewChatOptions, reorderChats, readChat, cleanArticles };","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Row, Col, Card, Form, Input, Button, DatePicker, Select, message } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined, HomeOutlined, ContactsOutlined } from \"@ant-design/icons\";\n\nimport MainNavBar from \"./MainNavBar.js\";\nimport { interests } from \"../constants/newsConstants.js\";\nimport { titleCase } from \"../utils/utils.js\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nimport '../styles/Signup.css';\n\nconst { Option } = Select;\n\nconst Signup = () => {\n    \n    const [input, setInput] = useState({\n        username: \"\",\n        password: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        dob: \"\",\n        interests: [],\n        affiliation: \"\"\n    });\n\n    const history = useHistory();\n\n    const onInputChange = (name, e) => {\n\n        if (name === \"interests\") {\n            input[name] = e;\n        } else if (name === \"dob\") {\n            input[name] = e._d.toLocaleString().split(\",\")[0];\n        } else {\n            input[name] = e.target.value;\n        }\n        \n        setInput(input);\n    };\n\n    const onSubmit = () => {\n\n        const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n        if (input['username'] === \"\" || \n            input['password'] === \"\" || \n            input['firstname'] === \"\" || \n            input['lastname'] === \"\" || \n            input['email'] === \"\" || \n            input['dob'] === \"\" || \n            input['affiliation'] === \"\") {\n\n            message.error(\"Please fill in all fields.\");\n        } else if (input['interests'].length < 2) {\n            message.error(\"Please select at least 2 interests.\");\n        } else if (!emailRegex.test(input['email'])) {\n            message.error(\"Please enter a valid email!\");\n        } else {\n\n            fetch(`http://${API_ENDPOINT}/createaccount`, {\n                method: 'POST',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                }, \n                body: JSON.stringify({\n                    username: input[\"username\"],\n                    password: input[\"password\"],\n                    firstname: input[\"firstname\"],\n                    lastname: input[\"lastname\"],\n                    email: input[\"email\"],\n                    dob: input[\"dob\"],\n                    affiliation: input[\"affiliation\"],\n                    interests: input[\"interests\"]\n                })\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                var user = JSON.parse(data);\n\n                if (user.username === null) {\n                    message.error('Username already exists.');\n                } else {\n                    message.success('Successfully created an account!');\n                    history.push('/login');\n                }\n                    \n            });\n\n        }\n    };\n\n    return (\n        <div className=\"background\">\n            <Row>\n                <MainNavBar/>\n            </Row>\n            <Row style={{marginTop: '50px'}}>  \n                <Col span={14}>\n\n\n                </Col>\n                <Col span={10}>\n                    <Card className=\"form-card\">\n                        <Form layout=\"vertical\">\n                            <Form.Item\n                                label={<b>Username</b>}\n                                rules={[{ required: true }]}\n                                style={{\n                                    display: \"inline-block\",\n                                    padding: \"0 8px 0 0\",\n                                    width: \"50%\",\n                                  }}\n                            >\n                                <Input prefix={<UserOutlined />} onChange={(e) => {onInputChange(\"username\", e)}} name=\"username\" />\n                            </Form.Item>\n                            <Form.Item\n                                label={<b>Password</b>}\n                                rules={[{ required: true }]}\n                                style={{\n                                    display: \"inline-block\",\n                                    padding: \"0 8px 0 0\",\n                                    width: \"50%\",\n                                  }}\n                            >\n                                <Input.Password prefix={<LockOutlined />} onChange={(e) => {onInputChange(\"password\", e)}} name=\"password\" />\n                            </Form.Item>\n                            <Form.Item\n                                label={<b>First Name</b>}\n                                rules={[{ required: true }]}\n                                style={{\n                                    display: \"inline-block\",\n                                    padding: \"0 8px 0 0\",\n                                    width: \"50%\",\n                                  }}\n                            >\n                                <Input prefix={<ContactsOutlined />} onChange={(e) => {onInputChange(\"firstname\", e)}} name=\"firstname\" />\n                            </Form.Item>\n                            <Form.Item\n                                label={<b>Last Name</b>}\n                                rules={[{ required: true }]}\n                                style={{\n                                    display: \"inline-block\",\n                                    padding: \"0 8px 0 0\",\n                                    width: \"50%\",\n                                  }}\n                            >\n                                <Input prefix={<ContactsOutlined />} onChange={(e) => {onInputChange(\"lastname\", e)}} name=\"lastname\" />\n                            </Form.Item>\n                            <Form.Item\n                                label={<b>Email</b>}\n                                rules={[{ required: true }]}\n                                style={{\n                                    display: \"inline-block\",\n                                    padding: \"0 8px 0 0\",\n                                    width: \"50%\",\n                                  }}\n                            >\n                                <Input prefix={<MailOutlined />} onChange={(e) => {onInputChange(\"email\", e)}} name=\"email\" />\n                            </Form.Item>\n                            <Form.Item\n                                label={<b>Date of Birth</b>}\n                                rules={[{ required: true }]}\n                                style={{\n                                    display: \"inline-block\",\n                                    padding: \"0 8px 0 0\",\n                                    width: \"50%\",\n                                  }}\n                            >\n                                <DatePicker placeholder=\"\" format=\"MM/DD/YYYY\" onChange={(e) => {onInputChange(\"dob\", e)}} style={{width: \"100%\"}} name=\"dob\" />\n                            </Form.Item>\n                            <Form.Item\n                                label={<b>Affiliation</b>}\n                                rules={[{ required: true }]}\n                            >\n                                <Input prefix={<HomeOutlined />} onChange={(e) => {onInputChange(\"affiliation\", e)}} name=\"affiliation\" />\n                            </Form.Item>\n                            <Form.Item\n                                label={<b>Interests</b>}\n                                rules={[{ required: true }]}\n                            >\n                                <Select\n                                    mode=\"multiple\"\n                                    placeholder=\"Select Interests\"\n                                    showSearch={false}\n                                    allowClear={true}\n                                    onChange={(e) => {onInputChange(\"interests\", e)}}\n                                    >\n                                        {interests.map((interest) => (\n                                            <Option value={interest}>{titleCase(interest)}</Option>\n                                        ))}\n                                </Select>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button onClick={onSubmit} type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Signup;\n","import { useEffect, useState } from \"react\";\nimport { Button, Menu, Input, Select, AutoComplete } from \"antd\";\nimport { DeploymentUnitOutlined, HomeOutlined, MenuOutlined, UserOutlined, CommentOutlined, SearchOutlined } from \"@ant-design/icons\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\n\nimport { useAuth } from \"../contexts/auth\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nimport '../styles/HomeNavBar.css';\n\nconst { Option } = AutoComplete;\n\nconst HomeNavBar = () => {\n\n    const history = useHistory();\n\n    const { setAuth } = useAuth();\n\n    const [searchSuggestions, setSearchSuggestions] = useState([]);\n    const [searchVal, setSearchVal] = useState(\"\");\n\n    const onLogout = () => {\n\n        fetch(`http://${API_ENDPOINT}/logout`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            setAuth(\"\");\n            history.push(`/`);\n        });\n    };\n\n    const onChange = (e) => {\n        \n        var search = e.toLowerCase();\n\n        if (search && search !== \"\") {\n            fetch(`http://${API_ENDPOINT}/getsearchsuggs?prefix=${search}`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => response.text())\n            .then((data) => {\n                var searchSuggestions = JSON.parse(data);\n                console.log(searchSuggestions);\n\n                setSearchSuggestions(searchSuggestions.suggs);\n            });\n        } else {\n            setSearchSuggestions([]);\n        }\n\n    };\n\n    const onSelect = (e) => {\n        setSearchVal(e);\n    };\n\n    const onDeselect = (e) => {\n        setSearchVal(\"\");\n        setSearchSuggestions([]);\n    };\n\n    const search = () => {\n\n        if (searchVal && searchVal !== \"\") {\n            history.push(`/profile/${searchVal}`);\n            setSearchVal(\"\");\n        }\n   \n    }\n\n    return (\n        <Menu style={{width: '100%', height: '50px'}} mode=\"horizontal\">\n            <Menu.Item className=\"no-pointer\">\n                <h1>\n                    <Link to=\"/home\">PennBook</Link>\n                </h1>\n            </Menu.Item>\n            <Menu.Item className=\"no-pointer\" disabled>\n                <Select \n                    filterOption={false}\n                    mode=\"multiple\" \n                    placeholder=\"Find users ...\"\n                    onSearch={onChange}\n                    onSelect={onSelect}\n                    onDeselect={onDeselect}\n                    removeIcon={<span></span>}\n                    style={{marginBottom: \"20px\", width: \"400px\"}}\n                    maxTagCount={1}\n                >\n                    {searchSuggestions.map((sugg) => (\n                        <Option \n                            key={sugg.username} \n                            value={sugg.username}\n                            disabled={searchVal !== \"\" && searchVal !== sugg.username}\n                        >\n                            {sugg.fullname}\n                        </Option>\n                    ))}\n                </Select>\n                <Button onClick={search} type=\"primary\">Search</Button>\n            </Menu.Item>\n            <Menu.Item style={{float: 'right'}} className=\"no-pointer\" disabled>\n                <Button\n                    type=\"primary\"\n                    onClick={onLogout}\n                >\n                    Logout\n                </Button>\n            </Menu.Item>\n            <Menu.Item style={{float: 'right'}}>\n                <Link to=\"/profile\">\n                    <UserOutlined />\n                    My Profile\n                </Link>\n            </Menu.Item>\n            <Menu.Item style={{float: 'right'}}>\n                <Link to=\"/messages\">\n                    <CommentOutlined />\n                    Messages\n                </Link>\n            </Menu.Item>\n            <Menu.Item style={{float: 'right'}}>\n                <Link to=\"/visualizer\">\n                    <DeploymentUnitOutlined />\n                    Visualizer\n                </Link>\n            </Menu.Item>\n            <Menu.Item style={{float: 'right'}}>\n                <Link to=\"/newsfeed\">\n                    <MenuOutlined />\n                    News Feed\n                </Link>\n            </Menu.Item>\n            <Menu.Item style={{float: 'right'}}>\n                <Link to=\"/home\">\n                    <HomeOutlined />\n                    Home\n                </Link>\n            </Menu.Item>\n        </Menu>\n    );\n}\n\nexport default withRouter(HomeNavBar);\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"antd\";\nimport { LikeOutlined, LikeTwoTone } from \"@ant-design/icons\";\n\nimport { useAuth } from \"../contexts/auth\";\nimport { epochToDate } from \"../utils/utils.js\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nconst Comment = (props) => {\n\n    const history = useHistory();\n\n    const { setAuth } = useAuth();\n\n    const [liked, setLiked] = useState(false);\n    const [numLikes, setNumLikes] = useState(props.info.number_of_likes > 0 ? props.info.number_of_likes : 0);\n\n    useEffect(() => {\n\n        fetch(`http://${API_ENDPOINT}/isCommentLiked?postID=${props.post.post_id}&postTimestamp=${props.post.timestamp}&commentTimestamp=${props.info.timestamp}`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var isLiked = JSON.parse(data);\n            setLiked(isLiked.isLiked);\n        });\n\n    }, []);\n\n    const likeComment = () => {\n\n        var url = liked ? `http://${API_ENDPOINT}/unlikecomment` : `http://${API_ENDPOINT}/likecomment`;\n\n        fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                postID: props.post.post_id,\n                postTimestamp: props.post.timestamp,\n                commentTimestamp: props.info.timestamp\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n        });\n\n        setLiked(!liked);\n\n        if (liked) {\n            setNumLikes(numLikes - 1);\n        } else {\n            setNumLikes(numLikes + 1);\n        }\n\n    };\n\n    return (\n        <div>\n            <h4 style={{display: \"inline\", marginRight: \"10px\"}}>{props.info.commenter_full_name}</h4>\n            <p style={{display: \"inline\"}}>{props.info.content}</p>\n            <span style={{position: 'absolute', right: '7.5%'}}>\n                <span style={{display: \"inline\", fontSize: '10px', color: '#8C8C8C'}}>{epochToDate(props.info.timestamp)}</span>\n                <Button style={{border: 0, padding: 0, lineHeight: '12px', width: '15px', marginLeft: '5px'}} icon={liked ? <LikeTwoTone style={{fontSize: '12px'}}/> : <LikeOutlined style={{fontSize: '12px'}}/>} onClick={likeComment}></Button>\n                <span style={{fontSize: '12px'}}>{numLikes}</span>\n            </span>\n             \n        </div>\n    );\n}\n\nexport default Comment;\n","import { useEffect, useState } from \"react\";\nimport { useHistory, Link } from 'react-router-dom';\nimport { Card, Button, Input } from \"antd\";\nimport { CaretRightOutlined, LikeOutlined, MessageOutlined, LikeTwoTone, MessageTwoTone } from \"@ant-design/icons\";\n\nimport Comment from './Comment';\n\nimport { epochToDate } from \"../utils/utils.js\";\nimport { useAuth } from \"../contexts/auth\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nimport '../styles/Profile.css';\n\nconst Post = (props) => {\n\n    const { setAuth } = useAuth();\n    const history = useHistory();\n\n    const [liked, setLiked] = useState(false);\n    const [numLikes, setNumLikes] = useState(props.info.num_likes > 0 ? props.info.num_likes : 0);\n\n    const [comment, setComment] = useState(\"\");\n    const [comments, setComments] = useState([]);\n    const [commentsVisible, setCommentsVisible] = useState(false);    \n\n    useEffect(() => {\n\n        fetch(`http://${API_ENDPOINT}/isPostLiked?postID=${props.info.post_id}&postTimestamp=${props.info.timestamp}`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var isLiked = JSON.parse(data);\n            setLiked(isLiked.isLiked);\n        });\n\n        fetch(`http://${API_ENDPOINT}/commentsonpost?postID=${props.info.post_id}&postTimestamp=${props.info.timestamp}`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var comments = JSON.parse(data);\n            setComments(comments.success.Items);\n        });\n\n    }, []);\n\n\n    const toggleComment = () => {\n        setCommentsVisible(!commentsVisible);\n    };\n\n    const likePost = () => {\n\n        var url = liked ? `http://${API_ENDPOINT}/unlikepost` : `http://${API_ENDPOINT}/likepost`;\n\n        fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                postID: props.info.post_id,\n                postTimestamp: props.info.timestamp\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n        });\n\n        setLiked(!liked);\n\n        if (liked) {\n            setNumLikes(numLikes - 1);\n        } else {\n            setNumLikes(numLikes + 1);\n        }\n\n    };\n\n    const onCommentChange = (e) => {\n        setComment(e.target.value);\n    }\n\n    const writeComment = () => {\n\n        var newComment = {\n            timestamp: new Date().getTime(),\n            commenter_username: props.currentUser.user,\n            commenter_full_name: props.currentUser.fullname,\n            content: comment\n        };\n\n        setComments(comments => comments.concat(newComment));\n        console.log(comment);\n\n        fetch(`http://${API_ENDPOINT}/comment`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                postID: props.info.post_id,\n                postTimestamp: props.info.timestamp,\n                content: comment\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n        });\n\n    }\n\n    return (\n        <Card className=\"post\">\n            <div>\n                {props.status ? \n                    <h3 style={{marginBottom: 0}}><Link className=\"name\" href={`/profile/${props.info.poster}`}>{props.info.poster_full_name}</Link></h3>\n                :\n                    <h3 style={{marginBottom: 0}}><Link className=\"name\" href={`/profile/${props.info.poster}`}>{props.info.poster_full_name}</Link> <CaretRightOutlined /> <Link className=\"name\" href={`/profile/${props.info.postee}`}>{props.info.postee_full_name}</Link></h3>\n                }\n                <p style={{fontSize: '12px', color: '#8C8C8C'}}>{epochToDate(props.info.timestamp)}</p>\n                <p>{props.info.content}</p>\n                <Button style={{border: 0}} icon={liked ? <LikeTwoTone /> : <LikeOutlined />} onClick={likePost}></Button> {numLikes} {numLikes === 1 ? \"Like\" : \"Likes\"} \n                <Button style={{border: 0, marginLeft: '5px'}} icon={commentsVisible ? <MessageTwoTone/> : <MessageOutlined />} onClick={toggleComment}></Button> {comments.length} {comments.length === 1 ? \"Comment\" : \"Comments\"}\n                {commentsVisible ? \n                    <div className=\"comments\">\n                        <hr />\n                        {comments.map((comment) => {\n                            return <Comment post={props.info} info={comment}/>\n                        })}\n                        <div style={{ width: '100%', lineHeight: 1.1}}>\n                            <Input style={{marginTop: '10px', width: '80%', border: 0, borderBottom: '1px solid lightgrey'}} placeholder=\"Add comment ...\" onChange={onCommentChange}></Input>\n                            <Button style={{ lineHeight: 1.1, width: '20%', border: 0}} onClick={writeComment}>Add</Button>\n                        </div>\n                    </div>\n                :\n                    <span></span>\n                }\n            </div>\n        </Card>\n    );\n}\n\nexport default Post;\n","import { useEffect, useState } from \"react\";\nimport { useParams, Link, useLocation, useHistory } from \"react-router-dom\";\nimport { Affix, Row, Col, Card, Avatar, Input, Button, Modal, Tag, Select, Empty, message } from \"antd\";\nimport { UserOutlined, EditOutlined, LockOutlined, UserAddOutlined, UserDeleteOutlined, SendOutlined } from \"@ant-design/icons\";\nimport socketClient from \"socket.io-client\";\n\nimport HomeNavBar from \"./HomeNavBar.js\";\nimport Post from \"./Post.js\";\n\nimport { interests } from \"../constants/newsConstants.js\";\nimport { titleCase } from \"../utils/utils.js\";\nimport { useAuth } from \"../contexts/auth\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nimport '../styles/Profile.css';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst socket = socketClient(`http://${API_ENDPOINT}`);\n\nconst Profile = () => {\n\n    const { setAuth } = useAuth();\n    const { username } = useParams();\n    const location = useLocation();\n    const history = useHistory();\n\n    const [currentUser, setCurrentUser] = useState({});\n\n    const [affiliationVisible, setAffiliationVisible] = useState(false);\n    const [emailVisible, setEmailVisible] = useState(false);\n    const [interestsVisible, setInterestsVisible] = useState(false);\n    const [passwordVisible, setPasswordVisible] = useState(false);\n\n    const [input, setInput] = useState({\n        newAffiliation: \"\",\n        newEmail: \"\",\n        oldPassword: \"\",\n        newPassword: \"\",\n        newInterests: []\n    });\n\n    const [postContent, setPostContent] = useState(\"\");\n    const [oldInterests, setOldInterests] = useState([]);\n\n    const [friendStatus, setFriendStatus] = useState(0);\n    const [posts, setPosts] = useState([]);\n    const [friends, setFriends] = useState([]);\n    const [accountDetails, setAccountDetails] = useState({\n        username: \"\", \n        email: \"\",\n        dob: \"\",\n        affiliation: \"\",\n        interests: [],\n        firstname: \"\",\n        lastname: \"\"\n    });\n\n    useEffect(() => {\n    \n        socket.on('connect', () => {\n            socket.emit('userConnect', 'im connected');\n\n            fetch(`http://${API_ENDPOINT}/loggedin`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    setAuth(\"\");\n                    history.push(`/`);\n                }\n                return response;\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                var user = JSON.parse(data);\n                setCurrentUser(user);\n                    \n                fetch(`http://${API_ENDPOINT}/getchats`, {\n                    method: 'GET',\n                    mode: 'cors',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                    }\n                })\n                .then((response) => {\n                    if (!response.ok) {\n                        setAuth(\"\");\n                        history.push(`/`);\n                    }\n                    return response;\n                })\n                .then((response) => response.text())\n                .then((data) => {            \n                    var chats = JSON.parse(data);\n\n                    socket.emit('joinRooms', {\n                        username: user.user,\n                        chats: chats.chats\n                    });\n                        \n                });\n            });\n        });\n\n        socket.on('message', (m) => {  \n            message.info(<span>{m.sender} sent you a message</span>);\n        });\n\n    }, []);\n\n    useEffect(() => {\n        var accountUrl = username ? `http://${API_ENDPOINT}/accountdetails?username=${username}` : `http://${API_ENDPOINT}/accountdetails`;\n\n        fetch(accountUrl, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            var accountDetails = JSON.parse(data);\n\n            if (accountDetails.username === null) {\n                history.push('/profile');\n                message.error(\"User does not exist.\");\n            } else {\n                setAccountDetails(accountDetails);\n                setOldInterests(accountDetails.interests);\n            }\n            \n\n        });\n\n        var postsUrl = username ? `http://${API_ENDPOINT}/getallpostsandstatuswall?username=${username}` : `http://${API_ENDPOINT}/getallpostsandstatuswall`;\n\n        fetch(postsUrl, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var homePosts = JSON.parse(data);\n            setPosts(homePosts.content);\n        });\n\n        var friendsUrl = username ? `http://${API_ENDPOINT}/getcurrentfriends?username=${username}` : `http://${API_ENDPOINT}/getcurrentfriends`;\n\n        fetch(friendsUrl, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var allFriends = JSON.parse(data);\n            setFriends(allFriends.status);\n        });\n\n        if (username) {\n            fetch(`http://${API_ENDPOINT}/getfriendshipstatus?usernameB=${username}`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    setAuth(\"\");\n                    history.push(`/`);\n                }\n                return response;\n            })\n            .then((response) => response.text())\n            .then((data) => {    \n                var friendship = JSON.parse(data);\n                if (friendship.status === \"outgoing request to B\") {\n                    setFriendStatus(3);\n                } else if (friendship.status === \"incoming request from B\") {\n                    setFriendStatus(2);\n                } else if (friendship.status === \"friends\") {\n                    setFriendStatus(1);\n                } else if (friendship.status === \"not friends\") {\n                    setFriendStatus(0);\n                }\n            });\n        }\n        \n    }, [location]);\n\n    const onInputChange = (name, e) => {\n\n        if (name === \"newInterests\") {\n            input[name] = e;\n        } else {\n            input[name] = e.target.value;\n        }\n\n        setInput(input);\n    };\n\n    const onPostChange = (e) => {\n        setPostContent(e.target.value);\n    };\n\n    const changeAffiliation = () => {\n        setAffiliationVisible(true);\n    };\n\n    const changeEmail = () => {\n        setEmailVisible(true);\n    };\n\n    const changeInterests = () => {\n        setInterestsVisible(true);\n    };\n\n    const changePassword = () => {\n        setPasswordVisible(true);\n    };\n\n    const onAffiliationOk = () => {\n        setAffiliationVisible(false);\n\n        fetch(`http://${API_ENDPOINT}/changeaffiliation`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                affiliation: input[\"newAffiliation\"]\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n        });\n\n        var a = accountDetails;\n        a.affiliation = input[\"newAffiliation\"];\n        setAccountDetails(a);\n\n    };\n\n    const onEmailOk = () => {\n        setEmailVisible(false);\n\n        fetch(`http://${API_ENDPOINT}/changeemail`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                email: input[\"newEmail\"]\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n        });\n\n        var a = accountDetails;\n        a.email = input[\"newEmail\"];\n        setAccountDetails(a);\n\n    };\n\n    const onInterestsOk = () => {\n        setInterestsVisible(false);\n        \n\n        fetch(`http://${API_ENDPOINT}/changeinterests`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                oldInterests: oldInterests,\n                newInterests: input[\"newInterests\"]\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n        });\n\n        var a = accountDetails;\n        a.interests = input[\"newInterests\"];            \n        setAccountDetails(a);\n\n    };\n\n    const onPasswordOk = () => {\n        setPasswordVisible(false);\n\n        fetch(`http://${API_ENDPOINT}/changepassword`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                oldPassword: input[\"oldPassword\"],\n                newPassword: input[\"newPassword\"]\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n        });\n\n    };\n\n    const onAffiliationCancel = () => {\n        setAffiliationVisible(false);\n    };\n\n    const onEmailCancel = () => {\n        setEmailVisible(false);\n    };\n\n    const onInterestsCancel = () => {\n        setInterestsVisible(false);\n    };\n\n    const onPasswordCancel = () => {\n        setPasswordVisible(false);\n    };\n\n    const makePost = () => {\n        setPostContent(\"\");\n\n        console.log(currentUser);\n\n        var newPost = [{\n            poster: currentUser.user,\n            postee: username ? username : currentUser.user,\n            poster_full_name: currentUser.fullname,\n            postee_full_name: username ? accountDetails.firstname + \" \" + accountDetails.lastname : currentUser.fullname,\n            content: postContent,\n            num_likes: 0,\n            num_comments: 0,\n            timestamp: new Date().getTime()\n        }];\n\n        var newPosts = newPost.concat(posts);\n        setPosts(newPosts);\n\n        var postBody = username ? {\n            postee: username,\n            postee_full_name: accountDetails.firstname + \" \" + accountDetails.lastname,\n            content: postContent\n        } : {\n            content: postContent\n        };\n\n        fetch(`http://${API_ENDPOINT}/makenewpost`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify(postBody)\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n        });\n\n    };\n\n    const addFriend = () => {\n\n        fetch(`http://${API_ENDPOINT}/addfriend`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                usernameB: username,\n                userB_full_name: accountDetails.firstname + \" \" + accountDetails.lastname\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n            setFriendStatus(3);\n        });\n\n    };\n\n    const acceptFriend = () => {\n\n        fetch(`http://${API_ENDPOINT}/acceptfriend`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                usernameB: username,\n                userB_full_name: accountDetails.firstname + \" \" + accountDetails.lastname\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n            setFriendStatus(1);\n        });\n\n    };\n\n    const rejectFriend = () => {\n        \n        fetch(`http://${API_ENDPOINT}/rejectfriend`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                usernameB: username\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n            setFriendStatus(0);\n        });\n\n    };\n\n    const removeFriend = () => {\n\n        fetch(`http://${API_ENDPOINT}/removefriend`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                usernameB: username\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n            setFriendStatus(0);\n        });\n\n    };\n\n    return (\n        <div className=\"background\">\n            <Modal\n                title=\"Change Affiliation\"\n                visible={affiliationVisible}\n                onOk={onAffiliationOk}\n                onCancel={onAffiliationCancel}\n                >\n                <Input placeholder=\"New Affiliation\" onChange={(e) => {onInputChange(\"newAffiliation\", e)}} />\n            </Modal>\n            <Modal\n                title=\"Change Email\"\n                visible={emailVisible}\n                onOk={onEmailOk}\n                onCancel={onEmailCancel}\n                >\n                <Input placeholder=\"New Email\" onChange={(e) => {onInputChange(\"newEmail\", e)}} />\n            </Modal>\n            <Modal\n                title=\"Change Interests\"\n                visible={interestsVisible}\n                onOk={onInterestsOk}\n                onCancel={onInterestsCancel}\n                >\n                    <Select\n                        mode=\"multiple\"\n                        showSearch={false}\n                        allowClear={true}\n                        onChange={(e) => {onInputChange(\"newInterests\", e)}}\n                        style={{width: '100%'}}\n                        defaultValue={accountDetails.interests}\n                        >\n                            {interests.map((interest) => (\n                                <Option value={interest}>{titleCase(interest)}</Option>\n                            ))}\n                    </Select>\n            </Modal>\n            <Modal\n                title=\"Change Password\"\n                visible={passwordVisible}\n                onOk={onPasswordOk}\n                onCancel={onPasswordCancel}\n                >\n                <Input placeholder=\"Old Password\" onChange={(e) => {onInputChange(\"oldPassword\", e)}} />\n                <Input placeholder=\"New Password\" onChange={(e) => {onInputChange(\"newPassword\", e)}} />\n            </Modal>\n            <Row>\n                <HomeNavBar/>\n            </Row>\n            <Row style={{marginTop: '50px'}}>  \n                <Col span={2}></Col>\n                <Col span={7}>\n                    <Affix offsetTop={20}>\n                        <Card className=\"profile-card\">\n                            <Avatar style={{display: 'block', margin: 'auto'}} size={80} icon={<UserOutlined/>} />\n                            {username ? \n                                <div className=\"profile-info\">\n                                    <h1>{accountDetails.firstname + \" \" + accountDetails.lastname}</h1>\n                                    <p>{accountDetails.affiliation}</p>\n                                    <p>{accountDetails.email}</p> \n                                    <div>\n                                        {accountDetails.interests.map((tag) => {\n                                            return <Tag color=\"blue\">{titleCase(tag)}</Tag>\n                                        })}\n                                    </div>\n                                    <br />\n                                    {friendStatus === 0 ? <Button icon={<UserAddOutlined />} onClick={addFriend} type=\"primary\">Add Friend</Button> : \n                                     friendStatus === 1 ? <Button style={{width: '200px', backgroundColor: '#52C41A', color: 'white', border: 0}} icon={<UserOutlined />} type=\"primary\">Friends</Button> :\n                                     friendStatus === 2 ? <Button style={{width: '200px'}} icon={<UserAddOutlined />} onClick={acceptFriend} type=\"primary\">Accept Friend Request</Button> :\n                                     friendStatus === 3 ? <Button icon={<SendOutlined />} type=\"primary\" disabled>Friend Request Sent</Button> :\n                                     <span></span>\n                                    }\n                                    <br />\n                                    {friendStatus === 2 ? <Button style={{width: '200px', marginTop: '5px'}} icon={<UserDeleteOutlined />} onClick={rejectFriend} type=\"primary\" danger>Reject Friend Request</Button> :\n                                    <span></span>}\n                                    {friendStatus === 1 ? <Button style={{width: '200px', marginTop: '5px'}} icon={<UserDeleteOutlined />} onClick={removeFriend} type=\"primary\" danger>Remove Friend</Button> :\n                                    <span></span>}\n                                </div>\n                            : \n                                <div className=\"profile-info\">\n                                    <h1>{accountDetails.firstname + \" \" + accountDetails.lastname}</h1>\n                                    <p>{accountDetails.affiliation} <Button style={{border: '0px'}} icon={<EditOutlined />} onClick={changeAffiliation}></Button></p>\n                                    <p>{accountDetails.email} <Button style={{border: '0px'}} icon={<EditOutlined />} onClick={changeEmail}></Button></p> \n                                    <div>\n                                        {accountDetails.interests.map((tag) => {\n                                            return <Tag color=\"blue\">{titleCase(tag)}</Tag>\n                                        })}\n                                    </div>\n                                    <Button style={{border: '0px'}} icon={<EditOutlined />} onClick={changeInterests}></Button>\n                                    <br />\n                                    <Button icon={<LockOutlined />} onClick={changePassword}>Change Password</Button>\n                                </div>\n                            }\n                            \n                        </Card>\n                        <Card style={{textAlign: 'center'}} className=\"profile-card\">\n                            <h2>Friends</h2>\n                            {friends.map((friend) => {\n                                return <Link to={`/profile/${friend.friendB}`} style={{margin: 0, display: 'block'}}>{friend.friendB_full_name}</Link>\n                            })}\n                        </Card>\n                    </Affix>\n                </Col>\n                <Col span={1}></Col>\n                <Col span={11}>\n                    <Card className=\"profile-post\">\n                        <TextArea placeholder=\"What's on your mind?\" showCount maxLength={500} value={postContent} onChange={onPostChange} />\n                        <Button type=\"primary\" onClick={makePost}>\n                            Post\n                        </Button>\n                    </Card>\n                    {posts.length > 0 ? \n                    posts.map((post) => {\n                        if (post.postee === post.poster) {\n                            return <Post info={post} status={true}/>;\n                        } else {\n                            return <Post info={post} status={false}/>;\n                        }\n                    }) : \n                    <Card className=\"profile-post\">\n                        <Empty \n                            image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\n                            description={\"No Posts\"}\n                        />\n                    </Card>\n                    }\n                </Col>\n                <Col span={4}></Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Profile;\n","import { useState, useEffect } from \"react\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport { Row, Col, Card, Input, Button, Modal, Select, message } from \"antd\";\nimport { UserAddOutlined, UserDeleteOutlined, SendOutlined, FormOutlined, UsergroupAddOutlined, InfoCircleOutlined, InfoCircleTwoTone } from \"@ant-design/icons\";\nimport socketClient from \"socket.io-client\";\n\nimport HomeNavBar from \"./HomeNavBar\";\n\nimport { useAuth } from \"../contexts/auth\";\nimport { membersToTitle, epochToDate, friendsNotInChat, getNewChatOptions, reorderChats, readChat } from \"../utils/utils.js\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nimport '../styles/Messages.css';\n\nconst { Option } = Select;\n\nconst socket = socketClient(`http://${API_ENDPOINT}`);\n\nconst Messages = () => {\n\n    const { setAuth } = useAuth();\n\n    const { chatid } = useParams();\n    const history = useHistory();\n    const location = useLocation();\n\n    const [incomingMessage, setIncomingMessage] = useState({});\n    const [messageContent, setMessageContent] = useState(\"\");\n    const [currentChat, setCurrentChat] = useState(\"\");\n\n    const [chats, setChats] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [currentFriends, setCurrentFriends] = useState([]);\n\n    const [addVisible, setAddVisible] = useState(false);\n    const [userToAdd, setUserToAdd] = useState(\"\");\n    const [addOptions, setAddOptions] = useState([]);\n\n    const [removeVisible, setRemoveVisible] = useState(false);\n    const [userToRemove, setUserToRemove] = useState(\"\");\n\n    const [showInfo, setShowInfo] = useState(true);\n    const [newChatVisible, setNewChatVisible] = useState(false);\n    const [newGroupChatVisible, setNewGroupChatVisible] = useState(false);\n    const [newChatOptions, setNewChatOptions] = useState([]);\n    const [newChatUser, setNewChatUser] = useState(\"\");\n    const [newGroupChatMembers, setNewGroupChatMembers] = useState([]);\n\n    const [currentUser, setCurrentUser] = useState({});\n\n    useEffect(() => {\n\n        socket.on('connect', () => {\n            socket.emit('userConnect', 'im connected');\n\n            fetch(`http://${API_ENDPOINT}/loggedin`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    setAuth(\"\");\n                    history.push(`/`);\n                }\n                return response;\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                var user = JSON.parse(data);\n                setCurrentUser(user);\n                    \n                fetch(`http://${API_ENDPOINT}/getchats`, {\n                    method: 'GET',\n                    mode: 'cors',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                    }\n                })\n                .then((response) => {\n                    if (!response.ok) {\n                        setAuth(\"\");\n                        history.push(`/`);\n                    }\n                    return response;\n                })\n                .then((response) => response.text())\n                .then((data) => {            \n                    var chats = JSON.parse(data);\n                    setChats(chats.chats);\n\n                    socket.emit('joinRooms', {\n                        username: user.user,\n                        chats: chats.chats\n                    });\n                        \n                });\n            });\n        });\n\n        socket.on('message', (message) => {  \n            setIncomingMessage(message);\n        });\n\n    }, []);\n\n    useEffect(() => {\n\n        fetch(`http://${API_ENDPOINT}/loggedin`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var user = JSON.parse(data);\n            setCurrentUser(user);\n        });\n\n        fetch(`http://${API_ENDPOINT}/getchats`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var chats = JSON.parse(data);\n            setChats(chats.chats);                        \n        });\n\n        fetch(`http://${API_ENDPOINT}/getcurrentfriends`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var friends = JSON.parse(data);\n            setCurrentFriends(friends.status);\n        });\n\n    }, [location]);\n\n    useEffect(() => {\n\n        if (chatid !== \"\" && incomingMessage._id === chatid) {\n            setMessages(oldMessages => oldMessages.concat(incomingMessage));   \n            var reorderedChats1 = reorderChats(chats, incomingMessage._id, true);\n            setChats(reorderedChats1); \n        } else {\n            var reorderedChats2 = reorderChats(chats, incomingMessage._id, false);\n            setChats(reorderedChats2);\n        }\n\n    }, [chatid, incomingMessage]);\n\n    useEffect(() => {\n\n        if (chatid) {\n            \n            console.log('here!');\n            console.log(chatid);\n\n            var readChats = readChat(chats, chatid);\n            setChats(readChats);\n            \n            setMessages([]);\n            setMessageContent(\"\");\n\n            fetch(`http://${API_ENDPOINT}/getchat?_id=${chatid}`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    setAuth(\"\");\n                    history.push(`/`);\n                }\n                return response;\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                var chat = JSON.parse(data);\n                setCurrentChat(chat.chat);\n            });\n\n            fetch(`http://${API_ENDPOINT}/getmessages?_id=${chatid}`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                var messages = JSON.parse(data);\n                setMessages(messages.messages);\n            });\n\n            fetch(`http://${API_ENDPOINT}/readchat`, {\n                method: 'POST',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                },\n                body: JSON.stringify({\n                    _id: chatid,\n                })\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    setAuth(\"\");\n                    history.push(`/`);\n                }\n                return response;\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                console.log(data);\n            });\n        }\n\n    }, [chatid])\n\n    const selectChat = (e) => {\n\n        var selectedChat = JSON.parse(e.currentTarget.value);\n\n        history.push(`/messages/${selectedChat._id}`);\n    };\n\n    const sendMessage = () => {\n\n        console.log(messageContent);\n        setMessageContent(\"\");\n\n        socket.emit('message', {\n            sender: currentUser.user, \n            sender_full_name: currentUser.fullname,\n            content: messageContent, \n            _id: chatid,\n            timestamp: new Date().getTime()\n        });\n\n        fetch(`http://${API_ENDPOINT}/sendmessage`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                _id: currentChat._id,\n                content: messageContent,\n                members: currentChat.members\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n        });\n\n    };\n\n    const onMessageChange = (e) => {\n        setMessageContent(e.target.value);\n    };\n\n    const toggleInfo = () => {\n        setShowInfo(!showInfo);\n    };\n\n    const onAddOk = () => {\n\n        if (userToAdd === undefined || userToAdd === \"\") {\n            setUserToAdd(\"\");\n            setAddVisible(false);\n            return;\n        }\n\n        var m = JSON.parse(userToAdd);\n\n        fetch(`http://${API_ENDPOINT}/adduser`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                _id: currentChat._id,\n                members: currentChat.members,\n                username: m.username,\n                fullname: m.fullname\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n        });\n\n        setUserToAdd(\"\");\n        setAddVisible(false);\n    };\n\n    const onAddCancel = () => {\n        setAddVisible(false);\n    };\n\n    const onAddChange = (e) => {\n        setUserToAdd(e);\n    };\n\n    const addUser = () => {\n\n        var opts = friendsNotInChat(currentFriends, currentChat.members);\n        setAddOptions(opts);\n        setAddVisible(true);\n\n    };\n\n    const onRemoveOk = () => {\n\n        if (userToRemove === undefined || userToRemove === \"\") {\n            setUserToRemove(\"\");\n            setRemoveVisible(false);\n            return;\n        }\n\n        var m = JSON.parse(userToRemove);\n\n        fetch(`http://${API_ENDPOINT}/removeuser`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                _id: currentChat._id,\n                members: currentChat.members,\n                username: m.username,\n                fullname: m.fullname\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n        });\n\n        setUserToRemove(\"\");\n        setRemoveVisible(false);\n    };\n\n    const onRemoveCancel = () => {\n        setRemoveVisible(false);\n    };\n\n    const onRemoveChange = (e) => {\n        setUserToRemove(e);\n    };\n\n    const removeUser = () => {\n        setRemoveVisible(true);\n    };\n\n    const newChat = () => {\n\n        var opts = getNewChatOptions(currentFriends, chats, currentUser.user);\n        setNewChatOptions(opts);\n        setNewChatVisible(true);\n\n    };\n\n    const onNewChatOk = () => {\n\n        if (newChatUser === undefined || newChatUser === \"\") {\n            setNewChatUser(\"\");\n            setNewChatVisible(false);\n            return;\n        }\n\n        var m = {\n            \"username\": currentUser.user,\n            \"fullname\": currentUser.fullname\n        };\n\n        fetch(`http://${API_ENDPOINT}/newchat`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                members: [JSON.stringify(m), newChatUser]\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n        });\n\n        setNewChatUser(\"\");\n        setNewChatVisible(false);\n\n    };\n\n    const onNewChatCancel = () => {\n        setNewChatVisible(false);\n    };\n\n    const onNewChatChange = (e) => {\n        setNewChatUser(e);\n    };\n\n    const newGroupChat = () => {\n        setNewGroupChatVisible(true);\n    };\n\n    const onNewGroupChatOk = () => {\n\n        if (newGroupChatMembers === undefined || newGroupChatMembers === []) {\n            setNewGroupChatMembers([]);\n            setNewGroupChatVisible(false);\n            return;\n        }\n\n        if (newGroupChatMembers.length < 2) {\n            message.error(\"You must select at least two users.\");\n            return;\n        }\n\n        var m = {\n            \"username\": currentUser.user,\n            \"fullname\": currentUser.fullname\n        };\n\n        fetch(`http://${API_ENDPOINT}/newchat`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                members: newGroupChatMembers.concat(JSON.stringify(m))\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n        });\n\n        setNewGroupChatMembers([]);\n        setNewGroupChatVisible(false);\n    };\n\n    const onNewGroupChatCancel = () => {\n        setNewGroupChatVisible(false);\n    };\n\n    const onNewGroupChatChange = (e) => {\n\n        console.log(e);\n        setNewGroupChatMembers(e);\n    };\n\n    return (\n        <div className=\"background\">\n            <Modal\n                title=\"New Chat\"\n                visible={newChatVisible}\n                onOk={onNewChatOk}\n                onCancel={onNewChatCancel}\n                >\n                    <Select\n                        showSearch={false}\n                        allowClear={true}\n                        onChange={onNewChatChange}\n                        style={{width: '100%'}}\n                    >              \n                        {newChatOptions.map((opt) => {\n                            var o = JSON.parse(opt);\n                            return <Option value={opt}>{o.fullname}</Option>\n                        })}                           \n                    </Select>\n            </Modal>\n            <Modal\n                title=\"New Group Chat\"\n                visible={newGroupChatVisible}\n                onOk={onNewGroupChatOk}\n                onCancel={onNewGroupChatCancel}\n                >\n                    <Select\n                        mode=\"multiple\"\n                        showSearch={false}\n                        allowClear={true}\n                        onChange={onNewGroupChatChange}\n                        style={{width: '100%'}}\n                    >\n                        {currentFriends.map((friend) => {\n                            return <Option value={JSON.stringify({\"username\": friend.friendB, \"fullname\": friend.friendB_full_name})}>{friend.friendB_full_name}</Option> \n                        })}\n                    </Select>\n            </Modal>\n            <Modal\n                title=\"Add User to Chat\"\n                visible={addVisible}\n                onOk={onAddOk}\n                onCancel={onAddCancel}\n                >\n                    <Select\n                        showSearch={false}\n                        allowClear={true}\n                        onChange={onAddChange}\n                        style={{width: '100%'}}\n                    >\n                            {addOptions.map((opt) => {\n                                var o = JSON.parse(opt);\n                                return <Option value={opt}>{o.fullname}</Option>\n                            })}\n                            \n                    </Select>\n            </Modal>\n            <Modal\n                title=\"Remove User from Chat\"\n                visible={removeVisible}\n                onOk={onRemoveOk}\n                onCancel={onRemoveCancel}\n                >\n                    <Select\n                        showSearch={false}\n                        allowClear={true}\n                        onChange={onRemoveChange}\n                        style={{width: '100%'}}\n                    >\n                        {currentChat.members ? currentChat.members.map((member) => {\n                            var m = JSON.parse(member);\n                            return  <Option value={member}>{m.fullname}</Option>\n                        }) : <span></span>}\n                    </Select>\n            </Modal>\n            <Row>\n                <HomeNavBar/>\n            </Row>\n            <Row style={{height: 'calc(100vh - 50px)', overflowY: 'hidden'}}>\n                <Col style={{backgroundColor: 'white', overflow: 'scroll', height: '100vh', borderRight: '1px solid #F0F0F0'}} span={6}>\n                    <Card style={{height: '75px'}}>\n                        <h2 style={{display: 'inline-block', width: '70%'}}>Chats</h2>\n                        <Button style={{borderRadius: '50%', position: 'absolute', right: 60}} onClick={newChat} icon={<FormOutlined />}></Button>\n                        <Button style={{borderRadius: '50%', position: 'absolute', right: 20}} onClick={newGroupChat} icon={<UsergroupAddOutlined />}></Button>\n                    </Card>\n                    {chats.map((chat) => {\n                        return (\n                        <Card style={{height: '75px', border: 0}}>\n                            {chat.last_modified > chat.last_read ?\n                                <div style={{width: '100%'}}>\n                                    <Button style={{fontWeight: 'bold', border: 0, width: '50%', textAlign: 'left', padding: 0}} value={JSON.stringify(chat)} onClick={selectChat}>{membersToTitle(chat.members, currentUser.user, currentUser.fullname)}</Button>\n                                    <span style={{fontWeight: 'bold', position: 'absolute', right: 20, fontSize: '10px', color: '#8C8C8C', marginTop: '7.5px'}}>{epochToDate(chat.last_modified)}</span>\n                                </div>\n                            :\n                                <div style={{width: '100%'}}>\n                                    <Button style={{border: 0, width: '50%', textAlign: 'left', padding: 0}} value={JSON.stringify(chat)} onClick={selectChat}>{membersToTitle(chat.members, currentUser.user, currentUser.fullname)}</Button>\n                                    <span style={{position: 'absolute', right: 20, fontSize: '10px', color: '#8C8C8C', marginTop: '7.5px'}}>{epochToDate(chat.last_modified)}</span>\n                                </div>\n                            }\n                            \n                        </Card>\n                        );\n                    })}\n                </Col>\n                <Col span={18}>\n                    {chatid === \"\" || !chatid || !currentChat ? \n                        <span></span>\n                    :\n                    <div>\n                        <Row>\n                            <Card id=\"messageTitle\" style={{width: '100%', height: '75px'}}>\n                                {membersToTitle(currentChat.members, currentUser.user, currentUser.fullname)}\n                                <Button style={{position: 'absolute', right: 20, border: 0}} icon={showInfo ? <InfoCircleTwoTone style={{fontSize: '18px'}} /> : <InfoCircleOutlined style={{color: '#8C8C8C', fontSize: '18px'}}/>} onClick={toggleInfo} />\n                            </Card>\n                        </Row>\n                        <Row>\n                            <Col span={showInfo ? 18 : 24}>\n                                <Row style={{backgroundColor: 'white', height: 'calc(100vh - 170px)', overflowY: 'scroll'}}>\n                                    <div className=\"message-container\">\n                                        {messages.map((message) => {\n                                            if (message.sender === currentUser.user) {\n                                                return (\n                                                    <div className=\"message2-bubble\">\n                                                        <span className=\"message2\">{message.content}</span><span className=\"message2-time\">{epochToDate(message.timestamp)}</span>\n                                                    </div>\n                                                )\n                                            } else {\n                                                return (\n                                                    <div className=\"message1-bubble\">\n                                                        {currentChat.is_group ? <p style={{marginTop: '5px'}} className=\"message1-sender\">{message.sender_full_name}</p> : <span></span>}\n                                                        <span style={currentChat.is_group ? {marginTop: 0} : {}} className=\"message1\">{message.content}</span><span className=\"message1-time\">{epochToDate(message.timestamp)}</span>\n                                                    </div>\n                                                )\n                                            }\n                                        })}\n                                    </div>\n                                </Row>\n                                <Row style={{backgroundColor: 'white', height: '80px', marginBottom: '10px'}}>\n                                    <Col style={{height: '80px'}} span={22}>\n                                        <Input style={{width: '100%', margin: '0 0 0 15px', borderRadius: '20px', height: '35px'}} value={messageContent} onChange={onMessageChange} placeholder=\"Type a message ...\" />\n                                    </Col>\n                                    <Col span={2}>\n                                        <Button style={{position: 'absolute', left: 20, height: '35px', border: 0}} onClick={sendMessage} icon={<SendOutlined />}></Button>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col span={6} style={{borderLeft: '1px solid #F0F0F0'}}>\n                                {chatid === \"\" || !chatid || !currentChat || !showInfo ? \n                                    <span></span>\n                                :\n                                    <div style={{backgroundColor: 'white', overflow: 'hidden', height: '100vh', borderRight: '1px solid black', textAlign: 'center'}} >\n                                        <h3 style={{margin: '25px'}}>Members</h3>\n                                        {currentChat.members.map((member) => {\n                                            var m = JSON.parse(member);\n                                            return <p style={{margin: 0}}>{m.fullname}</p>\n                                        })}\n                                        <Button style={{marginTop: '20px', marginBottom: '5px', width: '150px'}} icon={<UserAddOutlined />} onClick={addUser}>Add User</Button>\n                                        <br />\n                                        {currentChat.is_group && currentChat.members.length > 1 ? \n                                            <Button style={{margin: 0, width: '150px'}} icon={<UserDeleteOutlined />} onClick={removeUser}>Remove User</Button>\n                                        :\n                                            <span></span>\n                                        }\n                                    </div>\n                                }\n                            </Col>\n                        </Row>\n                    </div>\n                    }\n                </Col>\n                \n            </Row>\n        </div>\n    );\n}\n\nexport default Messages;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, Tag, Button } from \"antd\";\nimport { LikeOutlined, LikeTwoTone } from \"@ant-design/icons\";\n\nimport { formatDate, titleCase, formatDatePlus } from \"../utils/utils.js\";\nimport { useAuth } from \"../contexts/auth\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nimport '../styles/NewsFeed.css';\n\nconst NewsArticle = (props) => {\n\n    const { setAuth } = useAuth();\n    const history = useHistory();\n\n    const [liked, setLiked] = useState(false);\n    const [numLikes, setNumLikes] = useState(0);\n\n    useEffect(() => {\n\n        var correct_article_id = props.info.article_id.S ? props.info.article_id.S : props.info.article_id;\n\n        fetch(`http://${API_ENDPOINT}/isArticleLiked?article_id=${correct_article_id}`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var isLiked = JSON.parse(data);\n            setLiked(isLiked.isLiked);\n        });\n\n        fetch(`http://${API_ENDPOINT}/numlikesarticle?article_id=${correct_article_id}`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n            var likes = JSON.parse(data);\n            setNumLikes(likes.num_likes);\n        });\n\n    \n    });\n\n    const likeArticle = () => {\n\n        var url = liked ? `http://${API_ENDPOINT}/unlikearticle` : `http://${API_ENDPOINT}/likearticle`;\n        var correct_article_id = props.info.article_id.S ? props.info.article_id.S : props.info.article_id;\n\n        fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                article_id: correct_article_id\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n        });\n\n        setLiked(!liked);\n\n        if (liked) {\n            setNumLikes(numLikes - 1);\n        } else {\n            setNumLikes(numLikes + 1);\n        }\n        \n    };\n\n    return (\n        <Card className=\"news-article\">\n            <div>\n                <h3 style={{marginBottom: 0 }}>{props.info.headline.S ? props.info.headline.S : props.info.headline}</h3>\n                <p style={{fontStyle: \"italic\"}}>{props.info.authors.S ? props.info.authors.S : props.info.authors}</p>\n                \n                <p>{props.info.short_description.S ? props.info.short_description.S : props.info.short_description}</p>\n\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.info.url ? props.info.url : props.info.link.S ? props.info.link.S : props.info.link}>Read Full Article</a>\n                <span style={{float: \"right\"}}>{props.info.date.S ?\n                    formatDatePlus(props.info.date.S) : \n                    formatDate(props.info.date)\n                }\n                </span>\n                <Tag color=\"blue\" style={{float: \"right\"}}>{titleCase(props.info.category.S ? props.info.category.S : props.info.category)}</Tag>\n                <Button style={{border: 0}} icon={liked ? <LikeTwoTone /> : <LikeOutlined />} onClick={likeArticle}></Button> {numLikes} {numLikes === 1 ? \"Like\" : \"Likes\"} \n            </div>\n        </Card>\n    );\n}\n\nexport default NewsArticle;\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\nimport { Row, Col, Card, Input, Button, Empty, message } from \"antd\";\nimport { CheckCircleTwoTone, CloseCircleTwoTone, CommentOutlined } from \"@ant-design/icons\";\nimport socketClient from \"socket.io-client\";\n\nimport HomeNavBar from \"./HomeNavBar.js\";\nimport Post from \"./Post.js\";\nimport NewsArticle from \"./NewsArticle.js\";\n\nimport '../styles/Home.css';\n\nimport { useAuth } from \"../contexts/auth\";\nimport { cleanArticles } from \"../utils/utils.js\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nconst { TextArea } = Input;\n\nconst socket = socketClient(`http://${API_ENDPOINT}`);\n\nconst Home = () => {\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const { setAuth } = useAuth();\n\n    const [friendRequests, setFriendRequests] = useState([]);\n    const [newFriends, setNewFriends] = useState([]);\n    const [posts, setPosts] = useState([]);\n    const [postContent, setPostContent] = useState(\"\");\n    const [currentUser, setCurrentUser] = useState({});\n    const [onlineFriends, setOnlineFriends] = useState([]);\n\n    const [recs, setRecs] = useState([]);\n\n    useEffect(() => {\n\n        socket.on('connect', () => {\n            socket.emit('userConnect', 'im connected');\n\n            fetch(`http://${API_ENDPOINT}/loggedin`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    setAuth(\"\");\n                    history.push(`/`);\n                }\n                return response;\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                var user = JSON.parse(data);\n                setCurrentUser(user);\n                    \n                fetch(`http://${API_ENDPOINT}/getchats`, {\n                    method: 'GET',\n                    mode: 'cors',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                    }\n                })\n                .then((response) => {\n                    if (!response.ok) {\n                        setAuth(\"\");\n                        history.push(`/`);\n                    }\n                    return response;\n                })\n                .then((response) => response.text())\n                .then((data) => {            \n                    var chats = JSON.parse(data);\n\n                    socket.emit('joinRooms', {\n                        username: user.user,\n                        chats: chats.chats\n                    });\n                        \n                });\n            });\n        });\n\n        socket.on('message', (m) => {  \n            message.info(<span>{m.sender} sent you a message</span>);\n        });\n\n    }, []);\n\n    useEffect(() => {\n\n        fetch(`http://${API_ENDPOINT}/loggedin`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var user = JSON.parse(data);\n            setCurrentUser(user);\n        });\n\n        fetch(`http://${API_ENDPOINT}/getnewfriendships`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var newFriendships = JSON.parse(data);\n            console.log(data);\n            setNewFriends(newFriendships.friends);\n        });\n\n        fetch(`http://${API_ENDPOINT}/getallpostsandstatushome`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var homePosts = JSON.parse(data);\n            setPosts(homePosts.content);\n    \n        });\n\n        fetch(`http://${API_ENDPOINT}/getpendingrequests`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var allRequests = JSON.parse(data);\n            setFriendRequests(allRequests.status);\n            \n        });\n\n        fetch(`http://${API_ENDPOINT}/getallonlinefriends`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var onlineFriends = JSON.parse(data);\n            setOnlineFriends(onlineFriends.onlineFriends);\n            \n        });\n\n        fetch(`http://${API_ENDPOINT}/get-recommendations`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            console.log(data);\n            var articles = JSON.parse(data);\n            var twoArticles = cleanArticles(articles.recs);\n            setRecs(twoArticles);\n        });\n\n    }, [location]);\n\n    const onPostChange = (e) => {\n        setPostContent(e.target.value);\n    };\n\n    const makePost = () => {\n\n        setPostContent(\"\");\n\n        var newPost = [{\n            poster: currentUser.user,\n            postee: currentUser.user,\n            poster_full_name: currentUser.fullname,\n            postee_full_name: currentUser.fullname,\n            content: postContent,\n            num_likes: 0,\n            num_comments: 0,\n            timestamp: new Date().getTime()\n        }];\n\n        var newPosts = newPost.concat(posts);\n        setPosts(newPosts);\n\n        fetch(`http://${API_ENDPOINT}/makenewpost`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                content: postContent\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n        });\n    };\n\n    const acceptFriend = (e) => {\n\n        console.log(e.currentTarget.value);\n\n        var friend = JSON.parse(e.currentTarget.value);\n\n        fetch(`http://${API_ENDPOINT}/acceptfriend`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                usernameB: friend.friendB,\n                userB_full_name: friend.friendB_full_name,\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n        });\n\n    };\n\n    const rejectFriend = (e) => {\n        \n        console.log(e.currentTarget.value);\n\n        fetch(`http://${API_ENDPOINT}/rejectfriend`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                usernameB: e.currentTarget.value\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            console.log(data);\n        });\n\n    };\n\n    const newChat = (e) => {\n\n        var friend = JSON.parse(e.currentTarget.value)\n\n        var m = {\n            \"username\": currentUser.user,\n            \"fullname\": currentUser.fullname\n        };\n\n        var f = {\n            \"username\": friend.friendB,\n            \"fullname\": friend.friendB_full_name\n        };\n\n        fetch(`http://${API_ENDPOINT}/newchat`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                members: [JSON.stringify(m), JSON.stringify(f)]\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var _id = JSON.parse(data)._id;\n            message.success(\"New chat created!\");\n            history.push(`/messages/${_id}`);\n        });\n\n    };\n\n    return (\n        <div className=\"background\">\n            <Row>\n                <HomeNavBar/>\n            </Row>\n            <Row style={{marginTop: '50px'}}>  \n                <Col span={1}></Col>\n                <Col span={5}>\n                    <Card style={{marginBottom: '20px'}}>\n                        <h2 style={{textAlign: 'center'}}>Welcome, {currentUser.fullname}!</h2>\n                    </Card>\n                    <Card style={{textAlign: 'center'}}>\n                        <h2>New Friends</h2>\n                        {newFriends.map((f) => {\n                            return (<Link href={`/profile/${f.friendB}`} style={{margin: 0, color: '#000000', display: 'block'}}>{f.friendB_full_name}</Link>);\n                        })}\n                    </Card>\n                </Col>\n                <Col span={1}></Col>\n                <Col span={10}>\n                    <Card className=\"home-profile-post\">\n                        <TextArea placeholder=\"What's on your mind?\" showCount maxLength={500} value={postContent} onChange={onPostChange} />\n                        <Button type=\"primary\" onClick={makePost}>\n                            Post\n                        </Button>\n                    </Card>\n                    {recs.map((rec) => {\n                        return <NewsArticle info={rec} />\n                    })}\n                    {posts.length > 0 ? \n                    posts.map((post) => {\n                        if (post.postee === post.poster) {\n                            return <Post info={post} currentUser={currentUser} status={true}/>;\n                        } else {\n                            return <Post info={post} currentUser={currentUser} status={false}/>;\n                        }\n                    }) : \n                    <Card className=\"post\">\n                        <Empty \n                            image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\n                            description={\"No Posts\"}\n                        />\n                    </Card>}\n                </Col>\n                <Col span={1}></Col>\n                <Col span={5}>\n                    <Card className=\"friends-online\" style={{marginBottom: '20px'}}>\n                        <h2 style={{textAlign: 'center'}}>Online Now</h2>\n                        <div>\n                            {onlineFriends.map((onlineFriend) => {\n                                return (\n                                    <div>\n                                        <span className=\"friend-name\" style={{margin: 0}}><span className=\"dot\"></span>{onlineFriend.friendB_full_name}</span>\n                                        <Button style={{border: 0}} value={JSON.stringify(onlineFriend)} onClick={newChat} icon={<CommentOutlined />}/>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </Card>\n                    <Card style={{textAlign: 'center'}}>\n                        <h2>Friend Requests</h2>\n                        {friendRequests.map((friend) => {\n                            return (\n                                <p style={{margin: 0}}>{friend.friendB_full_name}\n                                    <Button style={{border: 0, width: '15px', margin: '0 2.5px 0 5px'}} value={JSON.stringify(friend)} onClick={acceptFriend} icon={<CheckCircleTwoTone twoToneColor=\"#52C41A\"/>} /> \n                                    <Button style={{border: 0, width: '15px', margin: '0 5px 0 2.5px'}} value={JSON.stringify(friend)} onClick={rejectFriend} icon={<CloseCircleTwoTone twoToneColor=\"#F5222D\"/>} />\n                                </p>\n                            )\n                        })}\n                        </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport { Row, Col, Input, Card, Empty, message, Button } from \"antd\";\nimport { LoadingOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport socketClient from \"socket.io-client\";\n\nimport HomeNavBar from \"./HomeNavBar.js\";\nimport NewsArticle from \"./NewsArticle.js\";\n\nimport { useAuth } from \"../contexts/auth\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nimport '../styles/NewsFeed.css';\n\nconst { Search } = Input;\n\nconst socket = socketClient(`http://${API_ENDPOINT}`);\n\nconst NewsFeed = () => {\n\n    const { setAuth } = useAuth();\n    const history = useHistory();\n\n    const [loading, setLoading] = useState(false);\n    const [articles, setArticles] = useState([]);\n    const [page, setPage] = useState(0);\n    const [searchTerms, setSearchTerms] = useState([]);\n\n    useEffect(() => {\n\n        socket.on('connect', () => {\n            socket.emit('userConnect', 'im connected');\n\n            fetch(`http://${API_ENDPOINT}/loggedin`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    setAuth(\"\");\n                    history.push(`/`);\n                }\n                return response;\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                var user = JSON.parse(data);\n                    \n                fetch(`http://${API_ENDPOINT}/getchats`, {\n                    method: 'GET',\n                    mode: 'cors',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                    }\n                })\n                .then((response) => {\n                    if (!response.ok) {\n                        setAuth(\"\");\n                        history.push(`/`);\n                    }\n                    return response;\n                })\n                .then((response) => response.text())\n                .then((data) => {            \n                    var chats = JSON.parse(data);\n\n                    socket.emit('joinRooms', {\n                        username: user.user,\n                        chats: chats.chats\n                    });\n                        \n                });\n            });\n        });\n\n        socket.on('message', (m) => {  \n            message.info(<span>{m.sender} sent you a message</span>);\n        });\n\n    }, []);\n    \n    const onNewsSearch = (e) => {\n\n        if (e.trim() === \"\") {\n            return;\n        }\n\n        var searchTerms = e.trim().split(/\\s+/);\n\n        setArticles([]);\n        setSearchTerms(searchTerms);\n        setLoading(true);\n\n        fetch(`http://${API_ENDPOINT}/newssearch`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                queries: searchTerms,\n                page: 0\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var articles = JSON.parse(data);\n\n            setLoading(false);\n            setArticles(articles.articles);\n\n            console.log(articles.articles);\n        });\n\n    };\n\n    const nextPage = () => {\n        setPage(page => page + 1);\n\n        setArticles([]);\n        setLoading(true);\n\n        fetch(`http://${API_ENDPOINT}/newssearch`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                queries: searchTerms,\n                page: page + 1\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var articles = JSON.parse(data);\n\n            setLoading(false);\n            setArticles(articles.articles);\n        });\n    };\n\n    const prevPage = () => {\n        setPage(page => page - 1);\n\n        setArticles([]);\n        setLoading(true);\n\n        fetch(`http://${API_ENDPOINT}/newssearch`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            },\n            body: JSON.stringify({\n                queries: searchTerms,\n                page: page - 1\n            })\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var articles = JSON.parse(data);\n\n            setLoading(false);\n            setArticles(articles.articles);\n        });\n    };\n\n    return (\n        <div className=\"background\">\n            <Row>\n                <HomeNavBar/>\n            </Row>\n            <Row style={{marginTop: '50px'}}>  \n                <Col span={6}></Col>\n                <Col span={12}>\n                    <Search className=\"news-search\" size=\"large\" placeholder=\"Find news articles ...\" enterButton onSearch={onNewsSearch} />\n                    {loading ? \n                        <Row style={{marginTop: '30px'}}>\n                            <LoadingOutlined style={{ fontSize: '30px', color: 'white', margin: 'auto'}} />\n                        </Row> \n                    : \n                        <span></span>\n                    }\n                    {articles.length > 0 ? \n                        <div>\n                            {articles.map((article) => {\n                                return <NewsArticle info={article} />\n                            })}\n                            <Row>\n                                <div style={{margin: 'auto'}}>\n                                    <Button style={{margin: '5px'}} icon={<LeftOutlined/>} onClick={prevPage} disabled={page === 0}/>\n                                    <Button style={{margin: '5px'}} icon={<RightOutlined/>} onClick={nextPage} disabled={articles.length < 10}/>\n                                </div>\n                            </Row>\n                        </div>\n                    : loading ?\n                        <span></span>\n                    :\n                        <Card className=\"post\">\n                            <Empty \n                                image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\n                                description={\"Search For Articles\"}\n                            />\n                        </Card>\n\n                    }\n                </Col>\n                <Col span={6}></Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default NewsFeed;\n","import { useState, useEffect } from \"react\";\nimport { useLocation, useHistory, Link } from \"react-router-dom\";\nimport { Row, message } from \"antd\";\nimport Graph from \"react-graph-vis\";\nimport { uuid } from \"uuidv4\";\nimport socketClient from \"socket.io-client\";\n\nimport HomeNavBar from \"./HomeNavBar.js\";\n\nimport { useAuth } from \"../contexts/auth\";\nimport { API_ENDPOINT } from '../constants/ports';\n\nconst socket = socketClient(`http://${API_ENDPOINT}`);\n\nconst Visualizer = () => {\n\n    const { setAuth } = useAuth();\n\n    const history = useHistory();\n    const location = useLocation();\n    \n    // Maintain states for user's affiliation and graph structure\n    const [affiliation, setAffiliation] = useState(\"\");\n    const [graph, setGraph] = useState({nodes: [], edges: []});\n\n    useEffect(() => {\n\n        console.log('hi');\n\n        socket.on('connect', () => {\n            socket.emit('userConnect', 'im connected');\n\n            fetch(`http://${API_ENDPOINT}/loggedin`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    setAuth(\"\");\n                    history.push(`/`);\n                }\n                return response;\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                var user = JSON.parse(data);\n                    \n                fetch(`http://${API_ENDPOINT}/getchats`, {\n                    method: 'GET',\n                    mode: 'cors',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                    }\n                })\n                .then((response) => {\n                    if (!response.ok) {\n                        setAuth(\"\");\n                        history.push(`/`);\n                    }\n                    return response;\n                })\n                .then((response) => response.text())\n                .then((data) => {            \n                    var chats = JSON.parse(data);\n\n                    socket.emit('joinRooms', {\n                        username: user.user,\n                        chats: chats.chats\n                    });\n                        \n                });\n\n                // Fetch the current friends of user\n                fetch(`http://${API_ENDPOINT}/getcurrentfriends`, {\n                    method: 'GET',\n                    mode: 'cors',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                    }\n                })\n                .then((response) => {\n                    if (!response.ok) {\n                        setAuth(\"\");\n                        history.push(`/`);\n                    }\n                    return response;\n                })\n                .then((response) => response.text())\n                .then((data) => {    \n                    // Initialize graph structure: nodes and edges to each friend        \n                    var allFriends = JSON.parse(data).status;\n                    var friendNodes = [];\n                    var friendEdges = [];\n\n                    // Add the logged-in user's node to the graph\n                    friendNodes.push( { \n                        id: 0, \n                        label: user.fullname, \n                        color: \"#ff9c6e\",\n                        font: '12px Helvetica black',\n                        borderWidth: 0,\n                        shape: 'circle',\n                        user: user.user \n                    } );\n                    // Iterate through each friend and create a new node and add to graph\n                    allFriends.forEach((friend, index) => {\n                        friendNodes.push( { \n                            id: index+1, \n                            label: friend.friendB_full_name, \n                            color: \"#9254de\",\n                            font: '12px Helvetica white',\n                            borderWidth: 0,\n                            shape: 'circle',\n                            user: friend.friendB\n                        } );\n                    });\n                    // Add an edge from logged-in user's node to each friend node\n                    allFriends.forEach((friend, index) => {\n                        friendEdges.push( { from: 0, to: index+1} );\n                    });\n                    // Render the graph with these set of nodes and edges\n                    setGraph({nodes: friendNodes, edges: friendEdges });\n                });\n            });\n        });\n\n        socket.on('message', (m) => {  \n            message.info(<span>{m.sender} sent you a message</span>);\n        });\n\n    }, []);\n\n    useEffect(() => {\n\n        console.log('hi2');\n\n        fetch(`http://${API_ENDPOINT}/loggedin`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {            \n            var user = JSON.parse(data);\n\n            // Fetch the current friends of user\n            fetch(`http://${API_ENDPOINT}/getcurrentfriends`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                }\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    setAuth(\"\");\n                    history.push(`/`);\n                }\n                return response;\n            })\n            .then((response) => response.text())\n            .then((data) => {            \n                // Initialize graph structure: nodes and edges to each friend        \n                var allFriends = JSON.parse(data).status;\n                var friendNodes = [];\n                var friendEdges = [];\n\n                // Add the logged-in user's node to the graph\n                friendNodes.push( { \n                    id: 0, \n                    label: user.fullname, \n                    color: \"#ff9c6e\",\n                    font: '12px Helvetica black',\n                    borderWidth: 0,\n                    shape: 'circle',\n                    user: user.user \n                } );\n                // Iterate through each friend and create a new node and add to graph\n                allFriends.forEach((friend, index) => {\n                    friendNodes.push( { \n                        id: index+1, \n                        label: friend.friendB_full_name, \n                        color: \"#9254de\",\n                        font: '12px Helvetica white',\n                        borderWidth: 0,\n                        shape: 'circle',\n                        user: friend.friendB\n                    } );\n                });\n                // Add an edge from logged-in user's node to each friend node\n                allFriends.forEach((friend, index) => {\n                    friendEdges.push( { from: 0, to: index+1} );\n                });\n                // Render the graph with these set of nodes and edges\n                setGraph({nodes: friendNodes, edges: friendEdges });\n            });\n        });\n\n        // Fetch user's account details and retrieve affiliation\n        fetch(`http://${API_ENDPOINT}/accountdetails`, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n            }\n        })\n        .then((response) => {\n            if (!response.ok) {\n                setAuth(\"\");\n                history.push(`/`);\n            }\n            return response;\n        })\n        .then((response) => response.text())\n        .then((data) => {\n            var accountDetails = JSON.parse(data);\n            setAffiliation(accountDetails.affiliation);\n        });\n\n    }, [location])\n\n    // Set the styling options for the graph (color and size)\n    const options = {\n        layout: {\n          hierarchical: true\n        },\n        edges: {\n          color: \"#000000\"\n        },\n        height: \"600px\",\n        width: \"1000px\"\n    };\n\n    const events = {\n        select: function(event) {\n\n            // Extract the username of the clicked-on user\n            var allNodes = graph.nodes;\n            var allEdges = graph.edges;\n            var { nodes } = event;\n            var clickedNode = nodes[0];\n            var c = graph.nodes[clickedNode];\n\n            if (c) {\n                var clickedUser = graph.nodes[clickedNode].user;\n\n                console.log(\"Clicked user: \" + clickedUser);\n\n                // Fetch the friends of the clicked user who have the same affiliation\n                fetch(`http://${API_ENDPOINT}/getnewuserstovisualize?affiliation=${affiliation}&clickedUser=${clickedUser}`, {\n                    method: 'GET',\n                    mode: 'cors',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${JSON.parse(localStorage.getItem(\"accessToken\"))}`\n                    }\n                })\n                .then((response) => {\n                    if (!response.ok) {\n                        setAuth(\"\");\n                        history.push(`/`);\n                    }\n                    return response;\n                })\n                .then((response) => response.text())\n                .then((data) => {     \n                    console.log(data);\n                    // Iterate through friends list and check if node already present in graph    \n                    JSON.parse(data).users.forEach((userToAdd) => {\n                        if (!graph.nodes.some(user => user.user === userToAdd.friendB)){\n                            // For a new user, create a new node and new edge from clicked user to this user\n                            var nodeToAdd = { \n                                id: allNodes.length, \n                                label: userToAdd.friendB_full_name, \n                                user: userToAdd.friendB,\n                                color: \"#9254de\",\n                                font: '12px Helvetica white',\n                                borderWidth: 0,\n                                shape: 'circle'\n                            };\n                            var edgeToAdd = { from: clickedNode, to: nodeToAdd.id };\n                            allNodes.push(nodeToAdd);\n                            allEdges.push(edgeToAdd);\n                        }\n                    });\n\n                    // Render the graph with these new additional nodes and edges\n                    setGraph({nodes: allNodes, edges: allEdges });\n                });  \n            }          \n        }\n    };\n    return (\n        <div className=\"background\">\n            <Row>\n                <HomeNavBar/>\n            </Row>\n            <Graph style={{width: '1000px', margin: 'auto'}} key={uuid()} graph={graph} options={options} events={events}/>\n        </div>\n    );\n    \n}\n\nexport default Visualizer;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { useAuth } from \"../contexts/auth\";\n\n\nconst AuthRoute = ({ component: Component, ...rest }) => {\n    \n    const { auth } = useAuth();\n\n    return(\n        <Route\n            {...rest}\n            render={props =>\n                auth ? (<Component {...props} />) : (<Redirect to=\"/\" />)\n            }\n        />\n    );\n\n}\n\nexport default AuthRoute;","import { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Profile from \"./components/Profile\";\nimport Messages from './components/Messages';\nimport Home from './components/Home';\nimport NewsFeed from './components/NewsFeed';\nimport Visualizer from './components/Visualizer';\n\nimport AuthRoute from './routes/AuthRoute';\n\nimport { AuthContext } from \"./contexts/auth\";\n\nimport './App.css';\nimport \"antd/dist/antd.css\";\n\nfunction App() {\n\n  const tokens = JSON.parse(localStorage.getItem(\"accessToken\"));\n  const [auth, setAuth] = useState(tokens);\n\n  const setTokens = (data) => {\n    localStorage.setItem(\"accessToken\", JSON.stringify(data));\n    setAuth(data);\n  }\n\n  return (\n    <AuthContext.Provider value={{ auth: auth, setAuth: setTokens }}>\n      <Router>\n        <div className=\"App\">\n        </div>\n\n        <Switch>\n          <AuthRoute path=\"/home\" component={Home} />\n          <AuthRoute path=\"/messages/:chatid\" component={Messages} />\n          <AuthRoute path=\"/messages\" component={Messages} />\n          <AuthRoute path=\"/profile/:username\" component={Profile} />\n          <AuthRoute path=\"/profile\" component={Profile} />\n          <AuthRoute path=\"/newsfeed\" component={NewsFeed} />\n          <AuthRoute path=\"/visualizer\" component={Visualizer} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/\">\n            {auth ? <Redirect to=\"/home\" /> : <Redirect to=\"/login\" />}\n          </Route> \n        </Switch>\n\n      </Router>\n    </AuthContext.Provider>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}